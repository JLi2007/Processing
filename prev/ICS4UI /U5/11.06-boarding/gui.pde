/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void browsing_clicked(GButton source, GEvent event) { //_CODE_:browsing:753621:
  windowName = "browse";
  
} //_CODE_:browsing:753621:

public void about_clicked(GButton source, GEvent event) { //_CODE_:about:980293:
  windowName = "help";
  
} //_CODE_:about:980293:

public void back_clicked(GButton source, GEvent event) { //_CODE_:back:558804:
  windowName = "start";
  
} //_CODE_:back:558804:

public void departure_clicked(GDropList source, GEvent event) { //_CODE_:departure:429311:
  selectedOrigin = departure.getSelectedText();
  originChosen = true;
  
  loadDetails(chosenAirline);
  
} //_CODE_:departure:429311:

public void arrival_clicked(GDropList source, GEvent event) { //_CODE_:arrival:776940:
  selectedArrival = arrival.getSelectedText();
  arrivalChosen = true;

  loadDetails(chosenAirline);
  
} //_CODE_:arrival:776940:

public void airline_chosen(GDropList source, GEvent event) { //_CODE_:airline:921618:
  selectedAirline = airline.getSelectedText();
  airlinePicked = true;

  if (selectedAirline.equals ("Air Fromage")) {
    chosenAirline = airFromage;
  }
  
  if (selectedAirline.equals ("Vector Air")) {
    chosenAirline = vectorAir;  
    
  }
  
  loadDetails(chosenAirline);
} //_CODE_:airline:921618:

public void value_entered(GTextField source, GEvent event) { //_CODE_:numPassengers:910010:
  passengers = int(numPassengers.getText());
  passengerValue = true;
  
  loadDetails(chosenAirline);
} //_CODE_:numPassengers:910010:

public void baggage_added(GSlider source, GEvent event) { //_CODE_:baggage:999612:
  numBaggage = baggage.getValueI();
  baggageClaimed = true;
  
  loadDetails(chosenAirline);
} //_CODE_:baggage:999612:

public void confirmation_clicked(GButton source, GEvent event) { //_CODE_:confirmation:547262:
  windowName = "confirm";
} //_CODE_:confirmation:547262:

public void pets_clicked(GButton source, GEvent event) {

}

// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  browsing = new GButton(this, 350, 300, 100, 40);
  browsing.setText("Browse Flights");
  browsing.addEventHandler(this, "browsing_clicked");
  about = new GButton(this, 350, 365, 100, 40);
  about.setText("About");
  about.addEventHandler(this, "about_clicked");
  back = new GButton(this, 59, 473, 100, 40);
  back.setText("Back");
  back.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  back.addEventHandler(this, "back_clicked");
  departure = new GDropList(this, 70, 125, 120, 120, 3, 30);
  departure.setItems(loadStrings("list_429311"), 0);
  departure.addEventHandler(this, "departure_clicked");
  arrival = new GDropList(this, 71, 220, 120, 120, 3, 30);
  arrival.setItems(loadStrings("list_776940"), 0);
  arrival.addEventHandler(this, "arrival_clicked");
  airline = new GDropList(this, 336, 43, 130, 120, 3, 30);
  airline.setItems(loadStrings("list_921618"), 0);
  airline.addEventHandler(this, "airline_chosen");
  pets = new GDropList(this, 336, 83, 130, 120, 3, 30);
  pets.setItems(loadStrings("list_789324"), 0);
  pets.addEventHandler(this, "pets_clicked");
  numPassengers = new GTextField(this, 550, 125, 120, 25, G4P.SCROLLBARS_NONE);
  numPassengers.setPromptText("Enter a number");
  numPassengers.setOpaque(true);
  numPassengers.addEventHandler(this, "value_entered");
  baggage = new GSlider(this, 550, 210, 120, 55, 10.0);
  baggage.setShowValue(true);
  baggage.setLimits(0, 0, 4);
  baggage.setNbrTicks(4);
  baggage.setStickToTicks(true);
  baggage.setShowTicks(true);
  baggage.setEasing(10.0);
  baggage.setNumberFormat(G4P.INTEGER, 0);
  baggage.setOpaque(false);
  baggage.addEventHandler(this, "baggage_added");
  confirmation = new GButton(this, 350, 299, 100, 40);
  confirmation.setText("Confirm Selection");
  confirmation.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  confirmation.addEventHandler(this, "confirmation_clicked");
}

// Variable declarations 
// autogenerated do not edit
GButton browsing; 
GButton about; 
GButton back; 
GDropList departure; 
GDropList arrival; 
GDropList airline; 
GDropList pets;
GTextField numPassengers; 
GSlider baggage; 
GButton confirmation; 
