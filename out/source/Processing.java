/* autogenerated by Processing revision 1293 on 2024-09-16 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class Processing extends PApplet {

/*
USER SETTINGS - TRY CHANGING THESE
*/

float speed = 0.004f;

boolean t = true, f = false;

boolean showSin = t;
boolean showCos = t;
boolean showTan = t;
boolean showSec = t;
boolean showCot = f;
boolean showCsc = t;

boolean recordMovie = f;

boolean showUnitCircle = t;
boolean showRadius = t;
boolean showAxisOne = t;
boolean showTanDash = showTan;
boolean showThetaSymbol = t;

int sinCol = color(255, 0, 0);
int cosCol = color(0, 255, 0);
int tanCol = color(255, 255, 0);
int secCol = color(255, 0, 255);
int cotCol = color(255, 150, 0);
int cscCol = color(0, 255, 255);
int radiusCol = color(255);
int circleCol = color(255);

//LOCATIONS & SCALES
float centerPlacement = 0.3f;   //Percentage of screen width
float unitCircleScale = 0.4f;   //Percentage of screen width

//OTHER GLOBAL VARIABLES
int radiusOneCol = color(255);
int axisOneCol = color(255);
int angleCol = color(255,220,220,210);
int backgroundCol = color(30);
int arrowCol = color(255, 200, 200);
int sideWeight = 4;
int unitCircleWeight = 2;
int dotSize = 15;
float arcDiameter = 100, thetaRadius = arcDiameter/3;
float r, d, rHalf;
float xC, yC, xDot, yDot, yTan, yCsc;
float midSinY, midCosX, midTanY, midSecX, midSecY, midCotX, midCotY, midCscY;
float xThetaSymbol, yThetaSymbol;
float xOne, yOne, xOneText, xOneHalf, yCText, xCText, xRadiusOne, yRadiusOne;

PFont myFont;
PImage equation;

String thetaSymbol = "\u03b8"; //UNICODE, YAY!
String sinTheta = "sin " + thetaSymbol;
String cosTheta = "cos " + thetaSymbol;
String tanTheta = "tan " + thetaSymbol;
String secTheta = "sec " + thetaSymbol;
String cscTheta = "csc " + thetaSymbol;
String cotTheta = "cot " + thetaSymbol;

float theta = PI/10, thetaHalf = theta/2;


public void setup() {
  /* size commented out by preprocessor */;
 
  equation = loadImage("x^2+y^2=1.png");
 
  fill(255);
  myFont = createFont("Arial", 96);
  textFont(myFont);
 
  d = width/1.5f;
  r = d/2;
  rHalf = r/2;
  xC = width/2;
  yC = height/2;
  xOne = xC + r;
  yOne = yC - r;
  xOneText = 1.01f*xOne;
  yCText = 0.99f *yC;
  xOneHalf = (xC + xOne)/2;
  xCText = 1.01f*xC;
}
public void draw() {
  background(0);
 
  fill(255,140,0);
  textAlign(LEFT);
 // text("Press r to run the animation. Press p to pause", 50, 50);
 
  xDot = xC + r*cos(theta);
  yDot = yC - r*sin(theta);
  
  //EQUATION
  image(equation, 500, 105);

  //CIRCLE & AXES
  noFill();
  stroke(255);
  strokeWeight(2);
  circle(xC, yC, d);
  line(0, yC, width, yC);
  line(xC, 0, xC, height);
 
  //RADIUS
  stroke(radiusCol);
  line(xC, yC, xDot, yDot);
  if( !showSec ) {
    textAlign(CENTER);
    float thetaPrintOne = theta + 0.15f;
    xRadiusOne = xC + rHalf * cos(thetaPrintOne);
    yRadiusOne = yC - rHalf * sin(thetaPrintOne);
    //(xC + xDot)/2; yRadiusOne = (yC + yDot)/2;
    fill(255);
    text("1", xRadiusOne, yRadiusOne);
  }
  
  //THETA ARC
  xThetaSymbol = xC + thetaRadius * cos( thetaHalf );   //The location of the "theta" symbol as the angle grows
  yThetaSymbol = yC - thetaRadius * sin( thetaHalf );
  
  drawAngle();
 
  strokeWeight(4);
  textSize(28);
 
  //SINE
  if( showSin ) {
    stroke(sinCol);
    fill(sinCol);
    line(xDot, yC, xDot, yDot);
    midSinY = (yC + yDot)/2;
    textAlign(LEFT);
    text(sinTheta, 1.01f*xDot, midSinY);
  }
 
  //COSINE
  if( showCos ) {
    stroke(cosCol);
    fill(cosCol);
    line(xC, yC, xDot, yC);
    midCosX = (xC + xDot)/2;
    textAlign(CENTER);
    text(cosTheta, midCosX, yCText);
  }
 
  //TANGENT
  if( showTan ) {
    stroke(tanCol);
    fill(tanCol);
    yTan = yC - r*tan(theta);
    line(xC, yC, xOne, yTan );
    line(xOne, yC, xOne, yTan );
    midTanY = (yC + yTan)/2;
    textAlign(LEFT);
    text(tanTheta, xOneText, midTanY);
  }
 
  //SECANT
  if( showSec ) {
    stroke(secCol);
    fill(secCol);
    line(xC, yC, xOne, yTan );
    textAlign(LEFT, CENTER);
    text(secTheta, xOneHalf, midTanY);
  }

  //COSECANT
  if( showCsc ) {
    stroke(cscCol);
    fill(cscCol);
    yCsc = yC - r/sin(theta);
    line(xC, yC, xC, yCsc );
    midCscY = (yC + yCsc)/2;
    textAlign(LEFT, CENTER);
    text(cscTheta, xCText, midCscY);
  }
 
  //COTANGENT
  if( showCot ) {
    stroke(cotCol);
    fill(cotCol);
    line(xDot, yDot, xC, yCsc );
    midCotX = 1.01f*(xDot + xC)/2;
    midCotY = 0.99f*(yDot + yCsc)/2;
    textAlign(LEFT, TOP);
    text(cotTheta, midCotX, midCotY);
  }
 
  //DOT
  fill(circleCol);
  noStroke();
  circle(xDot, yDot, dotSize);
 
  //UPDATES THE ANGLE
  theta = (theta + speed) % TWO_PI;
  thetaHalf = theta/2;  //Needed for drawing the theta symbol in the middle of the angle arc rather than at its edge
  
  if( recordMovie ) 
    saveFrame("Movies/sinCos/sin-cos-####.png");
}
public void drawAngle() {
  
  //DRAWS PINK ARC AT THE ORIGIN
  fill( angleCol );
  noStroke();
  arc(xC, yC, arcDiameter, arcDiameter, TWO_PI-(theta-.02f), TWO_PI, PIE);
  
  
  //DRAWS THE THETA SYMBOL AT THE ORIGIN
  if( showThetaSymbol && theta > 0.395f ) {
    fill(0,0,255);
    textSize( 20 );
    textAlign(CENTER, CENTER);
    text( thetaSymbol, xThetaSymbol, yThetaSymbol );
  }
  
}
public void keyPressed() {
  if( key == 'r' || key == 'R' )
    loop();
    
  if( key == 'p' || key == 'P' )
    noLoop();
}


  public void settings() { size(700, 700); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "Processing" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
