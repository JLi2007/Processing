/* autogenerated by Processing revision 1293 on 2024-10-24 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class processing extends PApplet {

//INITIAL VALUES. TRY CHANGING THESE
float G = 0.8f;       // Gravitational Constant
float M = 10000.0f;   // Mass of the Sun
float m = 1.0f;       // Mass of the Mars
float deltaT = 0.1f;  // Time increment per frame - Used to set the speed of animation (think of this as translating frames to seconds)

PVector posSun = new PVector( 600, 275);   //Position of the sun
PVector posMars = new PVector( 600, 65);  //Position of the Mars (initially directly above the sun)
PVector velMars = new PVector( 5, 3 );    //Initial velocity of the Mars...try changing this


public void setup() {
  background(0);
  /* size commented out by preprocessor */;
}


public void draw() {
  //DRAWS THE SYSTEM IN ITS CURRENT POSITION
  fill( 255, 255, 0);
  circle( posSun.x, posSun.y, 50 );
  fill( 255, 40, 40);
  circle( posMars.x, posMars.y, 20 );
  
  //UPDATES THE VELCOCITY AND POSITION FOR THE NEXT FRAME
  PVector rad = PVector.sub( posMars, posSun );   //Comment each
  PVector ForceDir = rad.normalize( null );       //of these lines
  
  float rSquared = rad.magSq();              
  float ForceMag = -G * M * m / rSquared;      
  PVector F = PVector.mult( ForceDir, ForceMag );  
  PVector accMars = PVector.div(F, m);
  
  PVector deltaV = PVector.mult( accMars, deltaT );  
  velMars.add( deltaV );
  
  PVector deltaPos = PVector.mult( velMars, deltaT ); 
  posMars.add( deltaPos );
}


  public void settings() { size(1000, 500); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "processing" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
